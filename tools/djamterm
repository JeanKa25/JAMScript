#!/bin/bash

IDIR="${BASH_SOURCE%/*}"
if [[ ! -d "$IDIR" ]]; then IDIR="$PWD"; fi
source "$IDIR/inc/misc_tools.sh"

# Edit the following locations to provide the
TMUX=`which tmux`
if [ -z $TMUX ]; then
    TMUX=/usr/local/bin/tmux
fi

# No need to edit below this line unless you find a bug!

die() {
    printf '%s\n' "$1" >&2
    exit 1
}

show_usage() {
    cat << EOF
Shows the background terminals of with the given tmux-id and terminal-num
running in the docker machines.

Usage: djamterm [tmux-id] [-t terminal-num]

This is the docker version of the jamterm command.

djamterm
Shows the first C terminal of the program that was last started.

djamterm -t 2
Shows the second C terminal of the program that was last started.

djamterm u-600-dev-2331-c -t 2
Shows the second C terminal of the program running under u-600-dev-2331.

djamterm u-600-dev-2331-c
Shows the first C terminal of the program running under u-600-dev-2331.

djamterm u-600-dev-2331-j
Shows the J terminal of the program running under u-600-dev-2331.

EOF
}

localtmux() {
    local tmuxapp=$1
    local termno=$2

    $TMUX has-session -t $tmuxapp 2>/dev/null
    res=$?
    if [ $res == "0" ]; then
        if [ -z $termno ]; then
            $TMUX attach -t $tmuxapp
        else
            $TMUX attach -t $tmuxapp-$termno
        fi
    fi
}

dockertmux() {
    local tmuxapp=$1
    local termno=$2

    appsfolder=$HOME"/.jamruns/apps"
    cd $appsfolder

    # echo "Searching for tmux-id: $tmuxapp"

    for jruns in */; do
        if [ $jruns != "*/" ]; then
            for jexs in `ls $appsfolder/$jruns`; do
                dir=$appsfolder/$jruns$jexs
                if [ -d $dir ] && [ -e $dir/class ]; then
                    local dcl=`cat $dir/class | tr -d '[:space:]'`

                    if [ $dcl == "docker" ]; then
                        if [ -e $dir/tmuxid_c ]; then
                            local dtm=`cat $dir/tmuxid_c | tr -d '[:space:]'`
                            if [ "$dtm" == "$tmuxapp" ]; then
                                docker_id=$(cat "$dir/dockerId")
                                # echo "Found tmux session '$tmuxapp' inside container '$docker_id'"

                                if [[ -t 1 ]]; then
                                    docker exec -it $docker_id tmux attach -t $tmuxapp
                                else
                                    echo "Tmux session '$tmuxapp' is running inside the container '$docker_id'."
                                    echo "You can attach it manually using:"
                                    echo "docker exec -it $docker_id tmux attach -t $tmuxapp"
                                fi
                                return 0
                            fi
                        fi
                    fi
                fi
            done
        fi
    done

    echo "No matching tmux session found for tmux-id: $tmuxapp"  # Debug: Print if no match is found
    return 1
}

###
# Main script execution begins here...
#

jamfolder=$HOME"/.jamruns"
exit_missingdir $jamfolder ".jamruns folder missing. JAMScript tools not setup?"

appsfolder=$jamfolder/apps
exit_missingdir $appsfolder ".jamruns/apps folder missing. JAMScript tools not setup?"

cd $appsfolder

if [ -z $1 ]; then
    if [ -e tmuxid ]; then
        tmuxid=`cat tmuxid`
        dockertmux $tmuxid
        exit
    fi
else
    if [ $1 == "-h" ] || [ $1 == "--help" ]; then
        show_usage
        exit
    elif [ $1 == "-t" ]; then
        if [ -e tmuxid ]; then
            tmuxid=`cat tmuxid`
            dockertmux $tmuxid $2
        fi
        exit
    else
        if [ -z $2 ]; then
            txid=$1
            if [ ${txid: -1} == "c" ]; then
                dockertmux $txid 1
            else
                localtmux $txid
            fi
            exit
        else
            if [ -n $3 ] && [ $2 == "-t" ]; then
                termid=$3
                dockertmux $1 $termid
            fi
        fi
    fi
fi