
    const {
        workerData, BroadcastChannel
    } = require('worker_threads');
    const globals = require('utils/constants').globals;
    const worklib = require('modules/jworklib');
    
    (function initApplication(parent)
    {
        const appchannel = new BroadcastChannel(globals.ChannelName.APP_LIBRARY);    
        parent.postMessage({cmd: "READY"});
        worklib.init(workerData.port, appchannel);
        worklib.run();
    })(workerData.port);  
    
        const mbox = new Map();

        mbox.set("compyou", {func: compyou, arg_sig: "x", side_eff: true, results: true, reuse: false, cond: ""});
        
  const conds = new Map();
  
  
  
    worklib.registerFuncs(mbox);
    worklib.registerConds(conds);
    var count = 0;
function compyou(str) {
//milestone_log(0);


count++;

console.log(count, str);

return "hello -- ";
}setInterval(function () {console.log("hello.. main loop.. calling the C function testfunc..  ");
remote_ctask_nv(cnode, "testfunc", count);
}, 100);
